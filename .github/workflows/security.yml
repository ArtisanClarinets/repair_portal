name: Security & Compliance

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

concurrency:
  group: security-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '20'

jobs:
  secret-scans:
    name: Secret Scanning
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@v3.66.4
        with:
          extra_args: --only-verified

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --redact --no-banner

  python-vulns:
    name: Python Dependency Scans
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip

      - name: Install scanners
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit==2.7.3 safety==3.2.7 bandit==1.7.9

      - name: pip-audit
        run: pip-audit --format json --output pip-audit.json || true

      - name: Safety
        run: safety check --json --output safety.json || true

      - name: Bandit security scan
        run: bandit -r repair_portal -x repair_portal/tests -f sarif -o bandit.sarif || true

      - name: Upload Python reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: python-security
          path: |
            pip-audit.json
            safety.json
            bandit.sarif
          if-no-files-found: ignore
          retention-days: 30

      - name: Publish Bandit SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: bandit.sarif

  node-vulns:
    name: Node Dependency Scans
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          corepack enable
          npm install --no-fund --no-audit

      - name: npm audit
        run: npm audit --json > npm-audit.json || true

      - name: Retire.js scan
        uses: actions/checkout@v4
        with:
          repository: RetireJS/retire.js
          path: retire-src
        continue-on-error: true

      - name: Run retire.js
        run: |
          npm install --prefix retire-src
          npx --prefix retire-src retire --path . --outputformat json --outputpath retire-report.json || true

      - name: Upload Node reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: node-security
          path: |
            npm-audit.json
            retire-report.json
          if-no-files-found: ignore
          retention-days: 30

  sast:
    name: Static Application Security Testing
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip

      - name: Install Semgrep
        run: |
          python -m pip install --upgrade pip
          pip install semgrep==1.75.0

      - name: Run Semgrep
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
        run: |
          if [ -n "$SEMGREP_APP_TOKEN" ]; then
            semgrep ci --config "p/ci" --config "p/r2c-security-audit" --output semgrep.sarif --sarif
          else
            semgrep scan --config "p/ci" --config "p/r2c-security-audit" --output semgrep.sarif --sarif
          fi

      - name: Upload Semgrep SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

  infrastructure:
    name: Infrastructure-as-Code Scan
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          output_format: sarif
          output_file_path: checkov.sarif
          framework: terraform,cloudformation,kubernetes

      - name: Upload Checkov SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: checkov.sarif

  container:
    name: Container Scan
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Build application image
        run: |
          if [ -f Dockerfile ]; then
            docker build -t repair_portal-ci .
          elif [ -f docker/Dockerfile ]; then
            docker build -t repair_portal-ci -f docker/Dockerfile .
          else
            echo "No Dockerfile found; skipping image build."
          fi

      - name: Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.22.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy.sarif'
          ignore-unfixed: true

      - name: Upload Trivy SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy.sarif

  summary:
    name: Security Summary
    runs-on: ubuntu-22.04
    needs:
      - secret-scans
      - python-vulns
      - node-vulns
      - sast
      - infrastructure
      - container
    if: always()
    steps:
      - name: Download reports
        uses: actions/download-artifact@v4
        with:
          path: security-reports
        continue-on-error: true

      - name: Generate summary
        env:
          SECRET_RESULT: ${{ needs.secret-scans.result }}
          PYTHON_RESULT: ${{ needs.python-vulns.result }}
          NODE_RESULT: ${{ needs.node-vulns.result }}
          SAST_RESULT: ${{ needs.sast.result }}
          INFRA_RESULT: ${{ needs.infrastructure.result }}
          CONTAINER_RESULT: ${{ needs.container.result }}
        run: |
          mkdir -p security-reports
          REPORT=security-reports/security-summary.md
          {
            echo "# Security Scan Summary"
            echo "Generated: $(date -u)"
            echo "Commit: $GITHUB_SHA"
            echo
            echo "## Job Results"
            echo "- secret-scans: ${SECRET_RESULT^^}"
            echo "- python-vulns: ${PYTHON_RESULT^^}"
            echo "- node-vulns: ${NODE_RESULT^^}"
            echo "- sast: ${SAST_RESULT^^}"
            echo "- infrastructure: ${INFRA_RESULT^^}"
            echo "- container: ${CONTAINER_RESULT^^}"
          } > "$REPORT"
          cat "$REPORT"

      - name: Upload summary
        uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: security-reports/security-summary.md
          retention-days: 90
